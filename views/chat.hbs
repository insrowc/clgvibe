<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!--fontawseom-->
 <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">

   <script
      src="https://kit.fontawesome.com/64d58efce2.js"
      crossorigin="anonymous"
	></script>
    <title>Chat</title>
    <!--  Bootstrap css file  -->
    <link rel="stylesheet" href="./css/bootstrap.min.css" />
    <link rel="stylesheet" href="./css/chat.css">
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"
      crossorigin="anonymous"
    ></script>
    <link rel="icon" type="image/svg-xml" href="./img/favicn.png" />
    
    
    <link
      rel="stylesheet"
      href="./EmojiButtonList.js-main/src/emojibuttonlistjs.min.css"
    />
    <script src="./EmojiButtonList.js-main/src/emojibuttonlistjs.min.js"></script>
    <script>
      // url Async requesting function
      function httpGetAsync(theUrl, callback) {
        // create the request object
        var xmlHttp = new XMLHttpRequest();

        // set the state change callback to capture when the response comes in
        xmlHttp.onreadystatechange = function () {
          if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
            callback(xmlHttp.responseText);
          }
        };

        // open as a GET call, pass in the url and set async = True
        xmlHttp.open("GET", theUrl, true);

        // call send with no params as they were passed in on the url string
        xmlHttp.send(null);

        return;
      }

      // callback for the top 8 GIFs of search
      function tenorCallback_search(responsetext) {
        // parse the json response
        var response_objects = JSON.parse(responsetext);

        top_10_gifs = response_objects["results"];

console.log(top_10_gifs);
        // load the GIFs -- for our example we will load the first GIFs preview size (nanogif) and share size (tinygif)
for(let i=0;i<=24;i++){
        document.getElementById(`preview_gif${i}`).src =
          top_10_gifs[i]["media"][0]["nanogif"]["url"];}

        // document.getElementById("share_gif").src = top_10_gifs[0]["media"][0]["tinygif"]["url"];

        return;
      }

      // function to call the trending and category endpoints
      function grab_data(e) {
        if (e.key === "Enter") {
          // set the apikey and limit
          var apikey = "5TLPY82JL213";
          var lmt = 24;
          let search;
          if (document.querySelector("#gif-input").value === "") {
            search = "good";
          } else {
            search = document.querySelector("#gif-input").value;
          }
          // test search term
          var search_term = search;

          // using default locale of en_US
          var search_url =
            "https://g.tenor.com/v1/search?q=" +
            search_term +
            "&key=" +
            apikey +
            "&limit=" +
            lmt;

          httpGetAsync(search_url, tenorCallback_search);

          // data will be loaded by each call's callback
          return;
        }
      }

      // SUPPORT FUNCTIONS ABOVE
      // MAIN BELOW

      // start the flow
      // grab_data();
    </script>
  </head>
  <style>
    .buttons{
      text-align: center;
    }
    .flabl{
    padding: 7px 5px;
    border-radius: 5px;
    color: #f1e5e6;
  background-color: #ff9933;
}
.flabl > span{
  font-size: 13px;
}
.contact-form{
  text-align: center;
}
    .time a:hover{
      color: #f93;
    }
    #gif{
      display: none;
    }
    .pregif{
      border: none;
      box-shadow: none;
      background: #fff;
    }
    .gif-image>.pregif:first-child>img{
      margin-left: 0px;
    }
    .message-box-aria .gifinput{
        width: 95%;
    margin-bottom: 5px;
    border-bottom: 1px solid black;
    height: auto;
    padding: 4px 6px;
      }
      .chatcount{
        font-size: 10px;
      }
      a:hover{
        color: #000;
        cursor: pointer;
      }
      .chatcount span{
        padding: 4px 9px;
    background: #f93;
    border-radius: 50%;
    margin-left: 7px;
      }
      .phoneuse{
        display: none;
      }
      @media only screen and (max-width: 980px) {
       #userspace{
            display: none;
          }
        .phoneuse{
          display: block;
          color: #fff;
        }
      }
      @media only screen and (max-height: 40rem){
        #scroll{
          height: 85vw;
        }
      }
  </style>
  <body>
    <!--  ======================= Desktop Chat Area Start  =======================  -->
    <div class="box">
    <main>
      <div class="chate" id="chatarea">
        <div class="chate-header">
          <div class="icons" class="phoneuse">
             <a href="/recentuser" class="phoneuse"><i class="fas fa-arrow-left"></i></a>
            </div>
          <div class="header-content">
            <div class="sender-avatar" style="margin: 0px 15px;">
              <img src="{{user.files.0.destination}}/{{user.files.0.originalname}}" width="50px" alt="" />
            </div>
            <div class="sender-action">
              <h3 id="receiver">{{ user.userName }}</h3>
              <!-- <span>userStatus</span> -->
            </div>
            
          </div>
        </div>
        <div id="scroll">
          <div class="chate-body" id="messages"></div>
        </div>
         
         <div class="message-box">
           
            <div class="message-box-aria">
              {{!-- emoji picker  --}}
              <button id="picker" class="btn">
                <i style="margin-left: 5px" class="far fa-smile"></i>
              </button>
              {{!-- message input --}}
              <textarea id="message" placeholder="Type a message.." /></textarea>
            
              
              {{!-- gif popup --}}
              <button id="gifpicker" class="btn">
                GIF
              </button>
            <div class="gif-popup" id="gif">
                <input
                  placeholder="type gif name and hit enter..."
                  onkeyup="grab_data(event)"
                  type="text"
                  name=""
                  id="gif-input"
                    class="gifinput"
                />
                <div class="gif-image">
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif0"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif1"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif2"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif3"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif4"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif5"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif6"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif7"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif8"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif9"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif10"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif11"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif12"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif13"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif14"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif15"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif16"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif17"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif18"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif19"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif20"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif21"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif22"></button>
                  <button class="pregif"><img src="/null" class="pgif" alt="" id="preview_gif23"></button>   
              </div>
            </div>
              {{!-- image input button --}}
              <button
                type="button"
                data-bs-toggle="modal"
                data-bs-target="#image-sender"
                class="btn"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="30"
                  height="30"
                  fill="currentColor"
                  class="bi bi-card-image"
                  viewBox="0 0 16 16"
                >
                  <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                  <path
                    d="M1.5 2A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13zm13 1a.5.5 0 0 1 .5.5v6l-3.775-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12v.54A.505.505 0 0 1 1 12.5v-9a.5.5 0 0 1 .5-.5h13z"
                  />
                </svg>
                <input id="image-input" type="file" style="display: none" />
              </button>
              <div
                class="modal fade"
                id="image-sender"
                tabindex="-1"
                aria-labelledby="exampleModalLabel"
                aria-hidden="true"
              >
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">Share</h5>
                      <button
                        type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        style="border: none;background: #fff;color: red;"
                        aria-label="Close"
                      >
                        <i class="fa fa-times"></i>
                      </button>
                    </div>
                    <div class="modal-body comments-body">
                      <div>
                        <div class="buttons">
                          <img
                            style="height: 190px"
                            src="./img/images/image 2.png"
                            id="chatimagepreview"
                            alt=""
                            class="about-pic"
                          /><br />
                        </div>
                        <form
                          action="/chatimg"
                          method="post"
                          class="contact-form"
                          enctype="multipart/form-data"
                        >
                          <input type="text" hidden id="sender" name="sender" value="{{ users.userName }}" />
                          <input
                            type="text"
                            hidden
                            value="{{ user.userName }}"
                            name="receiver"
                          />
                          <input
        type="file"
        name="chatimage"
        id="chatimage"
        style="width: 0;"
      />
        <label for="chatimage" class="flabl"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17"><path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z"/></svg> <span>Image</span></label>
        
                          <button
                            type="submit"
                            class="btn btn-dark btn-ouline"
                          >&nbsp; Post &nbsp;</button>
                        </form>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              {{!-- send button  --}}
              <button
                id="send"
                style="margin-left: 5px"
                class="btn"
              >
            <i class="fa fa-telegram" aria-hidden="true"></i>
              </button>
            </div>
          </div>
      </div>
      <div class="container" id="userspace">
        <div class="chate-liste">
          <div class="m-info">
            <div class="avatar">
              <img src="{{users.files.0.destination}}/{{users.files.0.originalname}}" width="60px" alt="" />
            </div>
            <div class="p-info">
              <div class="pname">
                <h2>{{users.userName}}</h2>
                <span class="p-disc">{{users.status}}</span>
              </div>
              
              <div class="icon">
                <i class="fas fa-bars"></i>
              </div>
            </div>
            <div class="p-info">
                <a href="/" style="color: #f93; font-size: 20px;"> <i class="fas fa-home"></i></a>
              </div>
          </div>
          {{!-- <form > --}}
            <div class="search-box">
              {{!-- <h5> Search Notes</h5> --}}
              <i class="fa fa-search"></i>
              <input type="text" id="searchbar" type="search"  onkeyup="search_animal()" placeholder="Search for chats " aria-label="Search" name="search">
            
          </div>
            {{!-- <button type="submit"><i class="fa fa-search"></i></button> --}}
          {{!-- </form> --}}
       <div id="userArea">


       </div>
            
          </div>
       
          <a href="/newuser"><div class="new-chate">
           <span> <i class="fas fa-user-plus"></i> </span> 
          </div>
          </a>
        </div>
    </main>
    </div>
   
    <!-- image preview -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script>
      const profileInput = document.querySelector("#chatimage");
      const profileImg = document.querySelector("#chatimagepreview");

      const imgPreview = (input, img) => {
        if (input.files && input.files[0]) {
          let reader = new FileReader(input);
          reader.onload = function (e) {
            img.setAttribute("src", e.target.result);
          };
          reader.readAsDataURL(input.files[0]);
        }
      };

      profileInput.addEventListener("change", () => {
        imgPreview(profileInput, profileImg);
      });

     
    </script>
    {{!-- emoji picker --}}
    <script>
      var instance = new emojiButtonList("picker", {
        dropDownXAlign: "left",
        textBoxID: "message",
      });
    </script>
    {{!-- emoji picker end --}}

    <script>
      const sendMsgBtn = document.querySelector("#send");
      const messageArea = document.querySelector("#messages");
      const textArea = document.querySelector("#message");
      const userArea = document.querySelector("#userArea");
      const gifImg = document.querySelector("#preview_gif");
      const mreemo = document.querySelector("#mreemo");
      const emoj = document.querySelector("#emoj");
      const gifbut = document.querySelector("#gifpicker");
      const gifbox = document.querySelector("#gif");
      const http = new XMLHttpRequest();
      let receiver;
 function tenorCallback_search(responsetext) {
        // parse the json response
        var response_objects = JSON.parse(responsetext);

        top_10_gifs = response_objects["results"];

        //console.log(top_10_gifs);
        // load the GIFs -- for our example we will load the first GIFs preview size (nanogif) and share size (tinygif)
        for(let i=0;i<=24;i++){
        document.querySelector(`#preview_gif${i}`).src =
          top_10_gifs[i]["media"][0]["nanogif"]["url"];}

        // document.getElementById("share_gif").src = top_10_gifs[0]["media"][0]["tinygif"]["url"];

        return;
      }

      // function to call the trending and category endpoints
      function grab() {
               let keylist=['good','ok','hey','hello','good morning','good night','bye','india'];
                let keyword = keylist[Math.floor(Math.random()*keylist.length)];       
          // using default locale of en_US
          var search_url =
           "https://g.tenor.com/v1/search?q="+keyword+"&key=5TLPY82JL213&limit=24";

          httpGetAsync(search_url, tenorCallback_search);

          // data will be loaded by each call's callback
          return;
        
      }

      // get cookie
      function getCookie(cname) {
        var name = cname + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(";");
        for (var i = 0; i < ca.length; i++) {
          var c = ca[i];
          while (c.charAt(0) == " ") {
            c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
          }
        }
        return "";
      }
var intervalId = null;
var varCounter = 0;
      const getChatuser = async () => {
        fetch(`https://www.clgvibe.com/getchatuser`)
          .then((response) => response.json())
          .then((data) => {
            userArea.innerHTML = "";
            let type,message;
            data.map((item) => {
              //console.log(item);
              fetch(`https://www.clgvibe.com/chatuserimg?name=${item}`)
          .then((response) => response.json())
          .then((data) => {
           
               fetch(`https://www.clgvibe.com/chatcount?name=${item}`)
          .then((response) => response.json())
          .then((content) => {
           

               message = `
               
               <div class="ms-a chat-active userx" id="usertoggle">
               <a href="/chat?username=${data._id}">
               
               <div class="avatar">
              <img src="${data.files[0].destination}/${data.files[0].originalname}" width="50px" alt="" />
            </div>
            <div class="mesg-info">
              <div class="ms-info">
                <div>
                <span class="sender-name userxname">${item}</span>
               <br>
                <span class="action">${data.collegeName}</span>
              </div>
                <div class="time">
                 <a href="/deletechat?username={{user._id}}"><i class="fa fa-trash-o" aria-hidden="true"></i></a>
                </div>`;
                if(content.length){
                  var dt=content[0].updatedAt.substring(11,16);
               message+=` <div class="chatcount">
   
               New Message At :<br>${dt}
                </div>
                <div class="chatcount">
                   <span>${content.length}</span>
                   </div>`;
               }
              
               
            message+= `

            </div>
              
            </div>
          </a> 
         </div>
        `;
 
  //<span class="msge-num ms-active"></span> 
             // messageArea.innerHTML = message;
             //console.log(item);
               userArea.insertAdjacentHTML("beforeend", message);
     

     if(varCounter <= 1) {
          varCounter++;
         
     } else {
          clearInterval(intervalId);
          varCounter=0;
     } 
           });
          });
            });
          })
          .catch((err) => {
            console.warn("Something went wrong.", err);
          });
      };
    
      const getChats = async () => {
        fetch(`https://www.clgvibe.com/getchat?username=${receiver}`)
          .then((response) => response.json())
          .then((data) => {
            messageArea.innerHTML = "";
            let type,message;
            data.map((item) => {
              // console.log(item);
              
              if (item.receiver === receiver) {
                type = "incoming";
                message = `
             
                    <div class="message-recever">
                      <div class="message-sender-message msgrclr ">`;
                        
                         if(item.message.substring(0,4)=='http'||item.message.substring(0,4)=='HTTP'){
                          message+=`<p><a href="${item.message}" target="_blank">${item.message}</a></p>`;
                        }
                        else if(item.message.substring(0,4)=='www.'||item.message.substring(0.4)=='WWW.'){
                          message+=`<p><a href="http://${item.message}" target="_blank">${item.message}</a></p>`;
                          }
                          else{  message+=` <p>${item.message}</p>`;
                        }
                         if( item.gif !== null){
                          message+=`<img src="${item.gif}" />`;
                          } 
              if (item.image) {
                message += `<img style="width:100px;" src="${item.image.destination}/${item.image.originalname}" />`;
              }
              message += `<a href="/deletechat?receiver=${item._id}&username={{user._id}}"><i class="fa fa-minus-circle" aria-hidden="true"></i></a>
              </div>
                      
                    </div>
                  `;
              //console.log(type);
              } 
              else {type = "outgoing";

               message = `
             
                    <div class="message-sender left">
                      <div class="message-sender-message">`;
                            if(item.message.substring(0,4)=='http'||item.message.substring(0,4)=='HTTP'){
                          message+=`<p><a href="${item.message}" target="_blank">${item.message}</a></p>`;
                        }
                        else if(item.message.substring(0,4)=='www.'||item.message.substring(0.4)=='WWW.'){
                          message+=`<p><a href="http://${item.message}" target="_blank">${item.message}</a></p>`;
                          }
                          else{  message+=` <p>${item.message}</p>`;
                        }
                           if( item.gif  !== null){
                          message+=`<img src="${item.gif}" />`;
                          } 
                         // <img src="${item.gif}" />`;
              if (item.image) {
                message += `<img style="width:100px;" src="${item.image.destination}/${item.image.originalname}" />`;
              }
              message += `</div>
                    </div>
                   
                  `;
              console.log(type);
              }
             // messageArea.innerHTML = message;
            // console.log(item);
            //setInterval(chatcount,1000);
               messageArea.insertAdjacentHTML("beforeend", message);
            });
          })
          .catch((err) => {
            console.warn("Something went wrong.", err);
          });
      };

      window.onload = () => {
        receiver = document.querySelector("#receiver").innerText;
      setInterval(getChats,1000);
     // setInterval(chatcount,1000);
       //getChats();
    // setInterval(getChatuser, 2000);
        getChatuser();
      };
var pregif=document.getElementsByClassName('pregif');
Array.from(pregif).forEach((element) =>{
  element.addEventListener("click", (e)=>{
        //console.log(e.target.parentNode);
        let tr= e.target.parentNode;
        img=tr.querySelector('.pgif');
        //console.log(img.src);
        http.open("POST", "https://www.clgvibe.com/chat", true);
          http.setRequestHeader("Content-type", "application/json");
        
          const data = {
            message: "",
            sender: getCookie("user"),
            receiver: receiver,
            gif: img.src,
          };
          http.send(JSON.stringify(data));
           intervalId = setInterval(getChatuser, 1000);
  });
});
      sendMsgBtn.onclick = () => {
        const msg = textArea.value;
        if (msg !== "") {
          http.open("POST", "https://www.clgvibe.com/chat", true);
          http.setRequestHeader("Content-type", "application/json");
        
          const data = {
            message: msg,
            sender: getCookie("user"),
            receiver: receiver,
            gif: null,
          };
          http.send(JSON.stringify(data));
          textArea.value = "";
          gifImg.src = "";
        } else {
          textArea.placeholder="message can't be empty";
         //textArea.style.color="red";
        }
   


     intervalId = setInterval(getChatuser, 1000);
    


      };

      gifbut.onclick = () =>{
        if(gifbox.style.display==="none"){
          gifbox.style.display="block";
          grab();
        }
        else{
          gifbox.style.display="none";
        }
      }
     document.querySelectorAll('#usertoggle').addEventListener('click', () =>{
       document.querySelector('chatarea').style.display="block";
       document.querySelector('userspace').style.display="none";
     })
    //  $("#scroll").scrollIntoView(false);
    </script>
 <script>
        // JavaScript code 
    function search_animal() { 
        let input = document.getElementById('searchbar').value 
        input=input.toLowerCase(); 
        let x = document.getElementsByClassName('userx'); 
        let y = document.getElementsByClassName('userxname'); 
        for (i = 0; i < y.length; i++) {  
            if (!y[i].innerHTML.includes(input)) { 
                x[i].style.display="none"; 
               
            } 
            else{
              x[i].style.display="flex";
            }
        } 
       
    }
        </script> 
    
  </body>
</html>
